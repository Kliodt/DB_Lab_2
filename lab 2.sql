/* 1.
    Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
    Таблицы: Н_ЛЮДИ, Н_СЕССИЯ.
    Вывести атрибуты: Н_ЛЮДИ.ОТЧЕСТВО, Н_СЕССИЯ.ЧЛВК_ИД.
    Фильтры (AND):
    a) Н_ЛЮДИ.ФАМИЛИЯ < Соколов.
    b) Н_СЕССИЯ.ИД < 14369.
    c) Н_СЕССИЯ.ИД < 14.
    Вид соединения: RIGHT JOIN.
    */

SELECT Н_ЛЮДИ.ОТЧЕСТВО, Н_СЕССИЯ.ЧЛВК_ИД
FROM Н_ЛЮДИ 
RIGHT JOIN Н_СЕССИЯ ON Н_СЕССИЯ.ЧЛВК_ИД = Н_ЛЮДИ.ИД AND Н_СЕССИЯ.ИД < 14
WHERE Н_ЛЮДИ.ФАМИЛИЯ < 'Соколов';

/* 2.
    Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
    Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
    Вывести атрибуты: Н_ЛЮДИ.ИМЯ, Н_ВЕДОМОСТИ.ЧЛВК_ИД, Н_СЕССИЯ.ИД.
    Фильтры (AND):
    a) Н_ЛЮДИ.ОТЧЕСТВО > Георгиевич.
    b) Н_ВЕДОМОСТИ.ИД = 1457443.
    Вид соединения: INNER JOIN.
    */

SELECT Н_ЛЮДИ.ИМЯ, Н_ВЕДОМОСТИ.ЧЛВК_ИД, Н_СЕССИЯ.ИД
FROM Н_ЛЮДИ
INNER JOIN Н_ВЕДОМОСТИ ON Н_ВЕДОМОСТИ.ИД = 1457443 AND Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
INNER JOIN Н_СЕССИЯ ON Н_СЕССИЯ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
WHERE Н_ЛЮДИ.ОТЧЕСТВО > 'Георгиевич';

/* 3.
    Составить запрос, который ответит на вопрос, 
    есть ли среди студентов вечерней формы обучения те, кто не имеет отчества.
    */

SELECT Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ОТЧЕСТВО, Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ
FROM Н_ПЛАНЫ, Н_ФОРМЫ_ОБУЧЕНИЯ, Н_УЧЕНИКИ, Н_ЛЮДИ
WHERE Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Очно-заочная(вечерняя)' --есть только на очной ф.о.
    AND Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
    AND Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
    AND Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
    AND (Н_ЛЮДИ.ОТЧЕСТВО IS NULL OR Н_ЛЮДИ.ОТЧЕСТВО = '.');

/* 4.
    В таблице Н_ГРУППЫ_ПЛАНОВ найти номера планов, по которым обучается (обучалось) 
    ровно 2 групп на заочной форме обучения.
    Для реализации использовать соединение таблиц (join-ы).
    */

SELECT t.ПЛАН_ИД, Н_ГРУППЫ_ПЛАНОВ.ГРУППА
FROM (
    SELECT Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД, COUNT(*) --ПЛАН_ИД должен встречаться в списке групп ровно 2 раза
    FROM Н_ГРУППЫ_ПЛАНОВ
    INNER JOIN Н_ПЛАНЫ ON Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
    INNER JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД 
        AND Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Заочная' --на заочной ф.о. вообще никто не учится
    GROUP BY Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД
    HAVING COUNT(*) = 2
    ) t
INNER JOIN Н_ГРУППЫ_ПЛАНОВ ON Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД = t.ПЛАН_ИД;


/* 5.
    Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка), 
    у которых средняя оценка больше минимальной оценки в группе 1100.
    */

SELECT t.ИД AS НОМЕР, t.CONCAT AS ФИО, t.СР_ОЦЕНКА
FROM ( --Средние оценки группы 4100
    SELECT Н_УЧЕНИКИ.ИД, CONCAT(Н_ЛЮДИ.ФАМИЛИЯ, ' ', Н_ЛЮДИ.ИМЯ, ' ', Н_ЛЮДИ.ОТЧЕСТВО), ROUND(AVG(to_number(Н_ВЕДОМОСТИ.ОЦЕНКА, '9')), 3) AS СР_ОЦЕНКА
    FROM Н_ЛЮДИ
    INNER JOIN Н_УЧЕНИКИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД AND Н_УЧЕНИКИ.ГРУППА = '4100'
    INNER JOIN Н_ВЕДОМОСТИ ON Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
    WHERE Н_ВЕДОМОСТИ.ОЦЕНКА IN ('5', '4', '3', '2')
    GROUP BY (Н_УЧЕНИКИ.ИД, CONCAT)
    ) t,
    ( --Минимальная оценка группы 1100
    SELECT MIN(to_number(Н_ВЕДОМОСТИ.ОЦЕНКА, '9'))
    FROM Н_ВЕДОМОСТИ, Н_УЧЕНИКИ
    WHERE Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД 
        AND Н_УЧЕНИКИ.ГРУППА = '1100'
        AND Н_ВЕДОМОСТИ.ОЦЕНКА IN ('5', '4', '3', '2')
    ) k
WHERE t.СР_ОЦЕНКА > k.MIN;

/* 6. 
    Получить список студентов, отчисленных ровно первого сентября 2012 года с очной формы обучения. В результат включить:
    1)номер группы;
    2)номер, фамилию, имя и отчество студента;
    3)номер пункта приказа;
    Для реализации использовать подзапрос с EXISTS.
    --'2003-08-31' - СУЩЕСТВУЮТ ЛЮДИ
    */

SELECT DISTINCT Н_УЧЕНИКИ.ГРУППА, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО, Н_УЧЕНИКИ.В_СВЯЗИ_С AS "НОМЕР ПУНКТА ПРИКАЗА"
FROM Н_ЛЮДИ
INNER JOIN Н_УЧЕНИКИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
WHERE EXISTS( --существует ли в приказе на отчисление от 01.09.2012
    SELECT 1
    FROM Н_УЧЕНИКИ
    WHERE Н_УЧЕНИКИ.ПРИЗНАК = 'отчисл' 
        AND Н_УЧЕНИКИ.СОСТОЯНИЕ = 'утвержден' 
        AND Н_УЧЕНИКИ.КОНЕЦ = '2012-09-01'
        AND Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
    )
    AND EXISTS ( --учится на очной форме обучения
        SELECT 1
        FROM Н_ФОРМЫ_ОБУЧЕНИЯ, Н_ПЛАНЫ, Н_УЧЕНИКИ, Н_ЛЮДИ
        WHERE Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Очная'
            AND Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
            AND Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
            AND Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
    );

/* 7. Сформировать запрос для получения числа в группе No 3100 отличников.
    Пусть отличники - это те, кто имеют хотя бы одну пятерку и не имеет ни одной 2, 3, 4 или незачета
    */

SELECT COUNT(*)
FROM Н_ЛЮДИ, Н_УЧЕНИКИ
WHERE Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД 
    AND Н_УЧЕНИКИ.ГРУППА = '3100'
    AND '5' = ALL(
        SELECT Н_ВЕДОМОСТИ.ОЦЕНКА
        FROM Н_ВЕДОМОСТИ 
        WHERE Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
            AND Н_ВЕДОМОСТИ.ОЦЕНКА IN ('5', '4', '3', '2', 'незач')
    );